name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2025]
        configuration: [Debug, RelWithDebInfo]
        buildDevel: [ON]
        include:
          - os: windows-2025
            preset: ci-vs2022
          - os: windows-2025
            configuration: RelWithDebInfo
            buildDevel: OFF
            preset: ci-vs2022

    runs-on: ${{ matrix.os }}

    env:
      FETCH_CONTENT_DIR: ./_deps

    steps:
    - uses: actions/checkout@v5

    - name: Setup environment
      run: Write-Output "DXSDK_DIR=${env:TEMP}/DXSDK" >> ${env:GITHUB_ENV}

    - name: Cache DirectX SDK
      uses: actions/cache@v4
      with:
        path: ${{ env.DXSDK_DIR }}
        key: June2010-v2

    - name: Cache CMake FetchContent
      uses: actions/cache@v4
      with:
        path: ${{ env.FETCH_CONTENT_DIR }}
        key: CMakeFC-${{ matrix.os }}-${{ hashFiles('external/**') }}

    - name: Install DirectX SDK
      run: |
        if (Test-Path -Path $env:DXSDK_DIR) {
          Write-Host "Using cached DirectX SDK. Skipping install ..."
          return
        }

        Write-Host "Downloading..."
        $exePath = "$env:TEMP\DXSDK_Jun10.exe"
        (New-Object Net.WebClient).DownloadFile('https://download.microsoft.com/download/A/E/7/AE743F1F-632B-4809-87A9-AA1BB3458E31/DXSDK_Jun10.exe', $exePath)

        Write-Host "Installing..."
        Start-Process -Wait -FilePath $exePath -ArgumentList "/P ""$env:DXSDK_DIR"" /U"

    - name: Configure
      run: 'cmake --preset=${{ matrix.preset }}
            -D BASALT_BUILD_DEVEL=${{ matrix.buildDevel }}
            -D FETCHCONTENT_BASE_DIR=${{ env.FETCH_CONTENT_DIR }}'

    - name: Build
      run: 'cmake --build --preset=${{ matrix.preset }}
            --config ${{ matrix.configuration }}
            --parallel'
